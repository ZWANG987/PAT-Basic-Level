/***
1030. 完美数列(25)

时间限制
300 ms
内存限制
65536 kB
代码长度限制
8000 B
判题程序
Standard
作者
CAO, Peng
给定一个正整数数列，和正整数p，设这个数列中的最大值是M，最小值是m，如果M <= m * p，则称这个数列是完美数列。

现在给定参数p和一些正整数，请你从中选择尽可能多的数构成一个完美数列。

输入格式：

输入第一行给出两个正整数N和p，其中N（<= 105）是输入的正整数的个数，p（<= 109）是给定的参数。第二行给出N个正整数，每个数不超过109。

输出格式：

在一行中输出最多可以选择多少个数可以用它们组成一个完美数列。

输入样例：
10 8
2 3 20 4 5 1 6 7 8 9
输出样例：
8
***/

#include<iostream>
#include<algorithm>
using namespace std;
int main() {
    long int a[100005], i, j, n, p, maxa=0;
    cin>>n>>p;
    for (i=0; i<n; i++)
        cin>>a[i];
    sort (a, a+n);
    for (i=0; i<n; i++) {
        for (j=i+maxa-1; j<n; j++) {
            if (a[i]*p < a[j])
                break;
            if (j-i+1 > maxa)
                maxa=j-i+1;
        }
    }
    cout<<maxa;
    return 0;
}

/***
思路：
1. 首先输入数组并排序，得到有序数组；
2. 题中为最大范围，定义maxa变量，初始化为0，从第一项开始搜索，得到最大个数，以maxa记录；
3. 之后从第二项开始，由于求的是最大个数，就不需要再一项一项的判断了，直接从maxa长度范围开始向后搜索；
4. 首先判断在maxa范围处是否满足要求，若超出不等式限制则开始下一轮，若未超出则向后搜索，得到新的maxa；
5. 最后得到最大个数maxa。
***/
