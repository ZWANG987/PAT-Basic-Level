/***
1018. 锤子剪刀布 (20)

时间限制
100 ms
内存限制
65536 kB
代码长度限制
8000 B
判题程序
Standard
作者
CHEN, Yue
大家应该都会玩“锤子剪刀布”的游戏：两人同时给出手势，胜负规则如图所示：


现给出两人的交锋记录，请统计双方的胜、平、负次数，并且给出双方分别出什么手势的胜算最大。

输入格式：

输入第1行给出正整数N（<=105），即双方交锋的次数。随后N行，每行给出一次交锋的信息，即甲、乙双方同时给出的的手势。C代表“锤子”、J代表“剪刀”、B代表“布”，第1个字母代表甲方，第2个代表乙方，中间有1个空格。

输出格式：

输出第1、2行分别给出甲、乙的胜、平、负次数，数字间以1个空格分隔。第3行给出两个字母，分别代表甲、乙获胜次数最多的手势，中间有1个空格。如果解不唯一，则输出按字母序最小的解。

输入样例：
10
C J
J B
C B
B B
B C
C C
C B
J B
B C
J J
输出样例：
5 3 2
2 3 5
B B
***/

#include<iostream>
using namespace std;
int find_max (int l, int k, int j) {
    if (j >= l && j >= k)
        return 2;
    if (l >= k && l >= j)
        return 0;
    if (k >= l && k >= j)
        return 1;
}
int main() {
    int a, i, m[6]={0}, n[6]={0}, x, y, temp;
    char p, q, v[3]={'C', 'J', 'B'};
    cin>>a;
    for (i=0; i<a; i++) {
        cin>>p>>q;
        if (p == q) {
            m[1]++;
            n[1]++;
        }
        if (p == 'C' && q == 'J') {
            m[0]++;
            m[3]++;
            n[2]++;
        }
        if (p == 'J' && q == 'C') {
            m[2]++;
            n[0]++;
            n[3]++;
        }
        if (p == 'C' && q == 'B') {
            m[2]++;
            n[0]++;
            n[5]++;
        }
        if (p == 'B' && q == 'C') {
            m[0]++;
            m[5]++;
            n[2]++;
        }
        if (p == 'J' && q == 'B') {
            m[0]++;
            m[4]++;
            n[2]++;
        }
        if (p == 'B' && q == 'J') {
            m[2]++;
            n[0]++;
            n[4]++;
        }
    }
    x = find_max (m[3], m[4], m[5]);
    y = find_max (n[3], n[4], n[5]);
    cout<<m[0]<<" "<<m[1]<<" "<<m[2]<<endl;
    cout<<n[0]<<" "<<n[1]<<" "<<n[2]<<endl;
    cout<<v[x]<<" "<<v[y];
    return 0;
}
